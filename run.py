#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —É–Ω–∏–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–∏–¥–µ–æ
"""

import os
import sys
from video_uniquizer import VideoUniquizer


def main():
    print("üé¨ –ù–µ–π—Ä–æ—Å–µ—Ç–µ–≤–∞—è —É–Ω–∏–∫–∞–ª–∏–∑–∞—Ü–∏—è –≤–∏–¥–µ–æ")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏
    if len(sys.argv) >= 2:
        input_video = sys.argv[1]
        output_video = sys.argv[2] if len(sys.argv) > 2 else "uniquized_" + os.path.basename(input_video)
    else:
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤–≤–æ–¥
        print("–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∏–¥–µ–æ —Ñ–∞–π–ª—É:")
        input_video = input("> ").strip()
        
        if not input_video:
            print("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω —Ñ–∞–π–ª!")
            return
            
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        base_name = os.path.splitext(os.path.basename(input_video))[0]
        output_video = f"uniquized_{base_name}.mp4"
        print(f"–í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: {output_video}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    if not os.path.exists(input_video):
        print(f"‚ùå –§–∞–π–ª {input_video} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print(f"üìÅ –í—Ö–æ–¥–Ω–æ–µ –≤–∏–¥–µ–æ: {input_video}")
    print(f"üìÅ –í—ã—Ö–æ–¥–Ω–æ–µ –≤–∏–¥–µ–æ: {output_video}")
    print()
    
    try:
        # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª–∏–∑–∞—Ç–æ—Ä
        uniquizer = VideoUniquizer()
        
        # –£–Ω–∏–∫–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∏–¥–µ–æ
        print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É...")
        result_path = uniquizer.uniquize_video(
            input_path=input_video,
            output_path=output_video,
            effects=['temporal', 'visual', 'neural']  # –í—Å–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
        )
        
        print(f"‚úÖ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {result_path}")
        print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {os.path.getsize(result_path) / (1024*1024):.1f} MB")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {e}")
        return


if __name__ == "__main__":
    main()
